CREATE TABLE IF NOT EXISTS authors (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    created_at INTEGER DEFAULT CURRENT_TIMESTAMP,
    updated_at INTEGER DEFAULT CURRENT_TIMESTAMP,
    uuid VARCHAR(150) NOT NULL,
    name VARCHAR(150) NOT NULL,
    email VARCHAR(150) NOT NULL DEFAULT "",
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS branches (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    created_at INTEGER DEFAULT CURRENT_TIMESTAMP,
    updated_at INTEGER DEFAULT CURRENT_TIMESTAMP,
    name VARCHAR(150) NOT NULL,
    description TEXT DEFAULT "",
    status VARCHAR(150) DEFAULT "Active",
    author VARCHAR(150) NOT NULL,
    UNIQUE (id),
    UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS remotes (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    path VARCHAR(150) NOT NULL,
    strategy VARCHAR(150) DEFAULT "",
    storage VARCHAR(150) NOT NULL,
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS files (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    timestamp INTEGER DEFAULT CURRENT_TIMESTAMP,
    path VARCHAR(150) NOT NULL,
    remote VARCHAR(150) DEFAULT "",
    branch VARCHAR(150) NOT NULL,
    author VARCHAR(150) NOT NULL,
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS commits ( 
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    created_at INTEGER DEFAULT CURRENT_TIMESTAMP,
    updated_at INTEGER DEFAULT CURRENT_TIMESTAMP,
    git_commit VARCHAR(150),
    message TEXT,
    file_from VARCHAR(150) NOT NULL,
    file_to VARCHAR(150) NOT NULL,
    diff VARCHAR(150),
    branch VARCHAR(150) NOT NULL,
    author VARCHAR(150) NOT NULL,
    UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS diffs ( 
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    created_at INTEGER DEFAULT CURRENT_TIMESTAMP,
    updated_at INTEGER DEFAULT CURRENT_TIMESTAMP,
    git_commit VARCHAR(150) ,
    result_path VARCHAR(150) NOT NULL DEFAULT "",
    script VARCHAR(150) NOT NULL DEFAULT "",
    result BLOB,
    technique TEXT NOT NULL,
    file_from VARCHAR(150) NOT NULL,
    file_to VARCHAR(150) NOT NULL,
    author VARCHAR(150) NOT NULL,
    branch VARCHAR(150) NOT NULL,
    UNIQUE (id)
);

CREATE TRIGGER IF NOT EXISTS update_files_timestamp
AFTER UPDATE ON files
FOR EACH ROW
BEGIN
    UPDATE files SET updated_at = CURRENT_INTEGER WHERE id = NEW.id;
END;

